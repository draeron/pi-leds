// Code generated by go-enum
// DO NOT EDIT!

package color

import (
	"fmt"
)

const (
	// Effect is a Mode of type Effect
	Effect Mode = iota
	// Hs is a Mode of type Hs
	Hs
	// Ct is a Mode of type Ct
	Ct
)

const _ModeName = "effecthsct"

var _ModeMap = map[Mode]string{
	0: _ModeName[0:6],
	1: _ModeName[6:8],
	2: _ModeName[8:10],
}

func (i Mode) String() string {
	if str, ok := _ModeMap[i]; ok {
		return str
	}
	return fmt.Sprintf("Mode(%d)", i)
}

var _ModeValue = map[string]Mode{
	_ModeName[0:6]:  0,
	_ModeName[6:8]:  1,
	_ModeName[8:10]: 2,
}

// ParseMode attempts to convert a string to a Mode
func ParseMode(name string) (Mode, error) {
	if x, ok := _ModeValue[name]; ok {
		return Mode(x), nil
	}
	return Mode(0), fmt.Errorf("%s is not a valid Mode", name)
}
